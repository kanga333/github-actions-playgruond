name: Test in ci image

on:
  pull_request:

env:
  IMAGE_ID: ghcr.io/${{ github.repository_owner }}/github-playgruond/codespace
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  build_ci_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v1
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image
        run: |
          docker buildx build \
            --push \
            --cache-from=$IMAGE_ID:cache \
            --cache-from=$IMAGE_ID:cache$PR_NUMBER \
            --cache-to type=registry,ref=$IMAGE_ID:cache$PR_NUMBER,mode=max \
            --tag $IMAGE_ID:$PR_NUMBER \
            .
    outputs:
      image: ${{ env.IMAGE_ID }}:${{ env.PR_NUMBER }}
  test:
    needs: build_ci_image
    runs-on: ubuntu-latest
    container: 
      image: ${{ needs.build_ci_image.outputs.image }}
      volumes:
        - dind-var-lib-docker:/var/lib/dockerl
      options: --init --privileged
    steps:
      - uses: actions/checkout@v3
      - name: Test in docker with mysql docker in docker
        run: |
          umount /var/run/docker.sock
          /usr/local/share/docker-init.sh
          docker-compose up -d
          sleep 60 # FIX
          mysqladmin ping -h 127.0.0.1 -pmysql | grep 'mysqld is alive'
